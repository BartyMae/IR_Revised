// Item type identifier
INCLUDE ~item_rev/lib/identify_fix.tpa~
INCLUDE ~item_rev/lib/identify_item.tpa~


// EE fixes
ACTION_IF (GAME_IS ~bgee bg2ee eet~ AND NOT GAME_IS ~tutu tutu_totsc bg2 tob bgt~) BEGIN

// Fix Shaman usabilities
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
    READ_SHORT 0x1c type
    READ_BYTE 0x31 prof
    PATCH_IF (%prof% = 92) OR (%prof% = 105) OR (%type% = 5) BEGIN // axes or shortbows or arrows
      WRITE_BYTE 0x21 (THIS BAND 0b10111111)
      LPF DELETE_EFFECT INT_VAR silent = 1 match_opcode  = 319 match_target = 1 match_power = 0 match_parameter2 = 5 match_parameter1 = 11 match_timing = 2 END
      LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 319 target = 1 power = 0 parameter2 = 5 parameter1 = 11 timing = 2 END
    END
  END
BUT_ONLY

// Add two-handed flag for shapeshifts/polymorphs
ACTION_IF ee_two_handed_shapeshifts=1 BEGIN
  ACTION_FOR_EACH resource IN
    ~dvjelly~
    ~dvrat~
    ~dvtroll~
    ~dvwere~
  BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
      COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
      PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
        READ_BYTE 0x18 flags
        WRITE_BYTE 0x18 (%flags% BOR 0b00000010) // Add two-handed flag
      END
    END
  END
END

// EE Spell Protections fixes

ACTION_IF (FILE_EXISTS_IN_GAME ~amul25.spl~) BEGIN // Amulet of Spell Warding's Spell Deflection
COPY_EXISTING ~amul25.spl~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
  SET opcode = 201			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 5			// power
SET resist_dispel = 2	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "amul25b" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 9 // param1
SET parameter2 = 1 // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT
END
END

ACTION_IF (FILE_EXISTS_IN_GAME ~rods01.spl~) BEGIN // Rod of Absorption's Spell Absorption
COPY_EXISTING ~rods01.spl~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
  SET opcode = 201			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 5			// power
SET resist_dispel = 2	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "rods01b" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 9 // param1
SET parameter2 = 1 // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT
END
END

ACTION_IF (FILE_EXISTS_IN_GAME ~staf11.spl~) BEGIN // Staff of the Magi's Spell Trap
COPY_EXISTING ~staf11.spl~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
  SET opcode = 201			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 9			// power
SET resist_dispel = 2	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "staf11a" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 100 // param1
SET parameter2 = 1 // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT
END
END

// EE quantity fixes

ACTION_FOR_EACH resource IN // Arrows, Bolts, Bullets, and Darts
  ~arow01~
  ~arow02~
  ~arow03~
  ~arow04~
  ~arow05~
  ~arow06~
  ~arow07~
  ~arow08~
  ~arow09~
  ~arow10~
  ~arow11~
  ~arow14~
  ~arow15~
  ~bolt01~
  ~bolt02~
  ~bolt03~
  ~bolt04~
  ~bolt05~
  ~bolt06~
  ~bolt07~
  ~bolt08~
  ~bolt09~
  ~sahbolt~
  ~kuobolt~
  ~kuobolt2~
  ~kuobolt3~
  ~bull01~
  ~bull02~
  ~bull03~
  ~bull04~
  ~bull05~
  ~bull06~
  ~dart01~
  ~dart02~
  ~dart03~
  ~dart04~
  ~dart05~
  ~ohdart50~
  ~ohdart51~
BEGIN
  ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
    COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
      WRITE_BYTE 0x38 0x50
    END
  END
END

ACTION_FOR_EACH resource IN // Throwing Axes and Throwing Daggers
  ~ax1h04~
  ~dagg05~
  ~dagg16~
BEGIN
  ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
    COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
      WRITE_BYTE 0x38 0x28
    END
  END
END

ACTION_FOR_EACH resource IN // Potions
  ~potn02~
  ~potn03~
  ~potn04~
  ~potn05~
  ~potn06~
  ~potn07~
  ~potn08~
  ~potn09~
  ~potn10~
  ~potn11~
  ~potn12~
  ~potn13~
  ~potn14~
  ~potn15~
  ~potn16~
  ~potn17~
  ~potn18~
  ~potn19~
  ~potn20~
  ~potn21~
  ~potn22~
  ~potn23~
  ~potn24~
  ~potn25~
  ~potn26~
  ~potn27~
  ~potn28~
  ~potn29~
  ~potn30~
  ~potn31~
  ~potn32~
  ~potn33~
  ~potn34~
  ~potn35~
  ~potn36~
  ~potn37~
  ~potn38~
  ~potn39~
  ~potn40~
  ~potn41~
  ~potn42~
  ~potn43~
  ~potn44~
  ~potn45~
  ~potn46~
  ~potn52~
  ~potn55~
BEGIN
  ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
    COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
      WRITE_BYTE 0x38 0x18
    END
  END
END

END // EE fixes


// BG1EE fixes

// Item resource fixes
ACTION_IF (GAME_IS ~bgee~ AND NOT GAME_IS ~tutu tutu_totsc bg2 tob bgt bg2ee eet~) BEGIN
  COPY ~item_rev/itm/belt09.itm~ ~override/belt06.itm~ // Girdle of Trollish Fortitude
    SAY NAME1 @1085    SAY NAME2 @1099
    SAY UNIDENTIFIED_DESC @1087 SAY IDENTIFIED_DESC @1100
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/belt09.spl~ ~override~ // Regeneration
    SAY NAME1 @4004
  COPY ~item_rev/itm/bgmisc89.itm~ ~override/misc89.itm~ // Edwin's Amulet
    SAY NAME1 @1780    SAY NAME2 @1780
    SAY UNIDENTIFIED_DESC @1781 SAY IDENTIFIED_DESC @1781
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/slng05.itm~ ~override/slng03.itm~ // Arla's Dragonbane
    SAY NAME1 @1920    SAY NAME2 @1929
    SAY UNIDENTIFIED_DESC @1923 SAY IDENTIFIED_DESC @1930
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/bgsw2h07.itm~ ~override/sw2h07.itm~ // World's Edge
    SAY NAME1 @1760    SAY NAME2 @2426
    SAY UNIDENTIFIED_DESC @1762 SAY IDENTIFIED_DESC @2427
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/leat07_.itm~ ~override/leat07.itm~ // Telbar's Armor
    SAY NAME1 @1636    SAY NAME2 @2573
    SAY UNIDENTIFIED_DESC @1640 SAY IDENTIFIED_DESC @2574
    LPF update_item_descriptions_to_bgee END
  // Shields
  COPY ~item_rev/itm/shld01a.itm~ ~override/shld01.itm~
    SAY NAME1 @1939    SAY NAME2 @1939
    SAY UNIDENTIFIED_DESC @1940 SAY IDENTIFIED_DESC @1940
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld02a.itm~ ~override/shld02.itm~
    SAY NAME1 @1939    SAY NAME2 @1941
    SAY UNIDENTIFIED_DESC @1942 SAY IDENTIFIED_DESC @1943
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld03a.itm~ ~override/shld03.itm~
    SAY NAME1 @1501    SAY NAME2 @1501
    SAY UNIDENTIFIED_DESC @1944 SAY IDENTIFIED_DESC @1944
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld04a.itm~ ~override/shld04.itm~
    SAY NAME1 @1501    SAY NAME2 @1945
    SAY UNIDENTIFIED_DESC @1503 SAY IDENTIFIED_DESC @1946
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld05a.itm~ ~override/shld05.itm~
    SAY NAME1 @1947    SAY NAME2 @1947
    SAY UNIDENTIFIED_DESC @1948 SAY IDENTIFIED_DESC @1948
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld06a.itm~ ~override/shld06.itm~
    SAY NAME1 @1947    SAY NAME2 @1949
    SAY UNIDENTIFIED_DESC @1950 SAY IDENTIFIED_DESC @1951
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld07a.itm~ ~override/shld07.itm~
    SAY NAME1 @1947    SAY NAME2 @1953
    SAY UNIDENTIFIED_DESC @1950 SAY IDENTIFIED_DESC @1954
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld08a.itm~ ~override/shld08.itm~
    SAY NAME1 @1955    SAY NAME2 @1955
    SAY UNIDENTIFIED_DESC @1956 SAY IDENTIFIED_DESC @1956
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld09a.itm~ ~override/shld09.itm~
    SAY NAME1 @1955    SAY NAME2 @1955
    SAY UNIDENTIFIED_DESC @1956 SAY IDENTIFIED_DESC @1956
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld10a.itm~ ~override/shld10.itm~
    SAY NAME1 @1955    SAY NAME2 @1955
    SAY UNIDENTIFIED_DESC @1956 SAY IDENTIFIED_DESC @1956
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld11a.itm~ ~override/shld11.itm~
    SAY NAME1 @1939    SAY NAME2 @1939
    SAY UNIDENTIFIED_DESC @1940 SAY IDENTIFIED_DESC @1940
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld12a.itm~ ~override/shld12.itm~
    SAY NAME1 @1939    SAY NAME2 @1939
    SAY UNIDENTIFIED_DESC @1940 SAY IDENTIFIED_DESC @1940
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld13a.itm~ ~override/shld13.itm~
    SAY NAME1 @1501    SAY NAME2 @1501
    SAY UNIDENTIFIED_DESC @1944 SAY IDENTIFIED_DESC @1944
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld14a.itm~ ~override/shld14.itm~
    SAY NAME1 @1501    SAY NAME2 @1501
    SAY UNIDENTIFIED_DESC @1944 SAY IDENTIFIED_DESC @1944
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld15a.itm~ ~override/shld15.itm~
    SAY NAME1 @1947    SAY NAME2 @1947
    SAY UNIDENTIFIED_DESC @1948 SAY IDENTIFIED_DESC @1948
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld16a.itm~ ~override/shld16.itm~
    SAY NAME1 @1947    SAY NAME2 @1947
    SAY UNIDENTIFIED_DESC @1948 SAY IDENTIFIED_DESC @1948
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld17a.itm~ ~override/shld17.itm~
    SAY NAME1 @1955    SAY NAME2 @1957
    SAY UNIDENTIFIED_DESC @1958 SAY IDENTIFIED_DESC @1959
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld19a.itm~ ~override/shld19.itm~
    SAY NAME1 @1501    SAY NAME2 @1960
    SAY UNIDENTIFIED_DESC @1944 SAY IDENTIFIED_DESC @1961
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld28a.itm~ ~override/shld28.itm~
    SAY NAME1 @1939    SAY NAME2 @1978
    SAY UNIDENTIFIED_DESC @1942 SAY IDENTIFIED_DESC @1979
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld29a.itm~ ~override/shld29.itm~
    SAY NAME1 @1501    SAY NAME2 @1980
    SAY UNIDENTIFIED_DESC @1942 SAY IDENTIFIED_DESC @1979
    LPF update_item_descriptions_to_bgee END
  COPY ~item_rev/itm/shld30a.itm~ ~override/shld30.itm~
    SAY NAME1 @1947    SAY NAME2 @1982
    SAY UNIDENTIFIED_DESC @1950 SAY IDENTIFIED_DESC @1983
    LPF update_item_descriptions_to_bgee END
END


// EET fixes

// Item resource fixes
ACTION_IF (GAME_IS ~eet~ AND NOT GAME_IS ~tutu tutu_totsc bgee bg2 tob bgt bg2ee~) BEGIN
  ACTION_IF (FILE_EXISTS_IN_GAME ~helm15_.itm~) BEGIN
    COPY_EXISTING ~helm15.itm~ ~override/helm15_.itm~
  END
  ACTION_IF (FILE_EXISTS_IN_GAME ~misc89_.itm~) BEGIN
    COPY_EXISTING ~bgmisc89.itm~ ~override/misc89_.itm~
  END
  ACTION_IF (FILE_EXISTS_IN_GAME ~ring08_.itm~) BEGIN
    COPY_EXISTING ~bgring08.itm~ ~override/ring08_.itm~
  END
  ACTION_IF (FILE_EXISTS_IN_GAME ~staf08_.itm~) BEGIN
    COPY_EXISTING ~staf08.itm~ ~override/staf08_.itm~
  END
  ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h09_.itm~) BEGIN
    COPY_EXISTING ~sw1h09.itm~ ~override/sw1h09_.itm~
  END
  ACTION_IF (FILE_EXISTS_IN_GAME ~sw2h07_.itm~) BEGIN
    COPY_EXISTING ~bgsw2h07.itm~ ~override/sw2h07_.itm~
  END
  ACTION_IF (FILE_EXISTS_IN_GAME ~wand12_.itm~) BEGIN
    COPY_EXISTING ~bgwand12.itm~ ~override/wand12_.itm~
  END
END


// Non-EE fixes

// Invalid opcodes fix
ACTION_IF (GAME_IS ~tutu tutu_totsc bg2 tob bgt~ AND NOT GAME_IS ~bgee bg2ee eet~) BEGIN
  COPY_EXISTING_REGEXP GLOB ~^.+\.spl$~ override // remove spellstates
    GET_OFFSET_ARRAY ab_array SPL_V10_HEADERS
    PHP_EACH ab_array AS int => ab_off BEGIN
      GET_OFFSET_ARRAY2 fx_array ab_off ITM_V10_HEAD_EFFECTS
      PHP_EACH fx_array AS int => fx_off BEGIN
        READ_SHORT fx_off fx_type
        PATCH_IF fx_type > 318 BEGIN
          //PATCH_PRINT "%SOURCE_RES%.spl has invalid opcode %fx_type%"
        END
      END
    END
  BUT_ONLY
  COPY_EXISTING_REGEXP GLOB ~^.+\.spl$~ override
    LPF DELETE_SPELL_EFFECT
      INT_VAR opcode_to_delete = 321
    END
    LPF DELETE_SPELL_EFFECT
      INT_VAR opcode_to_delete = 328
    END
  BUT_ONLY
  //PRINT "All invalid opcodes 321 and 328 successfully removed!"
END


// BG1 fixes

// Item resource fixes
ACTION_IF (GAME_IS ~tutu tutu_totsc~ AND NOT GAME_IS ~bg2 tob bgt bgee bg2ee eet~) BEGIN
  COPY ~item_rev/itm/belt09.itm~ ~override/belt06.itm~ // Girdle of Trollish Fortitude
    SAY NAME1 @1085    SAY NAME2 @1099
    SAY UNIDENTIFIED_DESC @1087 SAY IDENTIFIED_DESC @1100
  COPY ~item_rev/itm/belt09.spl~ ~override~ // Regeneration
    SAY NAME1 @4004
  COPY ~item_rev/itm/bgmisc89.itm~ ~override/misc89.itm~ // Edwin's Amulet
    SAY NAME1 @1780    SAY NAME2 @1780
    SAY UNIDENTIFIED_DESC @1781 SAY IDENTIFIED_DESC @1781
  COPY ~item_rev/itm/slng05.itm~ ~override/slng03.itm~ // Arla's Dragonbane
    SAY NAME1 @1920    SAY NAME2 @1929
    SAY UNIDENTIFIED_DESC @1923 SAY IDENTIFIED_DESC @1930
  COPY ~item_rev/itm/bgsw2h07.itm~ ~override/sw2h07.itm~ // World's Edge
    SAY NAME1 @1760    SAY NAME2 @2426
    SAY UNIDENTIFIED_DESC @1762 SAY IDENTIFIED_DESC @2427
  COPY ~item_rev/itm/leat07_.itm~ ~override/leat07.itm~ // Telbar's Armor
    SAY NAME1 @1636    SAY NAME2 @2573
    SAY UNIDENTIFIED_DESC @1640 SAY IDENTIFIED_DESC @2574
END


// All games

// BG2 broken areas fix
ACTION_IF (FILE_EXISTS_IN_GAME ~xr1200.are~) BEGIN
  COPY_EXISTING ~xr1200.are~ ~override/xr2400.are~
  COPY_EXISTING ~xr1200.are~ ~override/xr2600.are~
END

// Fixes for other mods
ACTION_IF (FILE_EXISTS_IN_GAME ~X#RINGRO.itm~) BEGIN // BG1 NPC Project Ring of Human Influence fix
  ACTION_IF (FILE_EXISTS_IN_GAME ~ring30.itm~) BEGIN
    COPY_EXISTING ~ring30.itm~ ~override/X#RINGRO.itm~
  END
END

// Stacking fixes

ACTION_FOR_EACH resource IN // Rings and Gems
  ~misc6o~   // Sun Gem
  ~misc6n~   // Sun Gem
  ~ringjoia~ // Joia's Flamedance Ring
  ~ringjos~  // Joseph's Greenstone Ring
BEGIN
  ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
    COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
      SET opcode = 0      // Set opcode
      SET target = 0      // target type
      SET timing = 2      // timing type
      SET power = 0      // power
      SET resist_dispel = 0  // dispel/resitance
      SET duration = 0    // duration
      SET probability1 = 0  // probability 1
      SET probability2 = 0  // probability 2
      SPRINT "resource" ""     // resource
      SET dicenumber = 0    // dice number
      SET dicesize = 0    // dice size
      SET savingthrow = 0   // saving throw
      SET savebonus = 0    // saving throw bonus
      SET parameter1 = 0 // set parameter 1
      SET parameter2 = 0 // set parameter 2
      LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
    END
  END
END

ACTION_FOR_EACH resource IN // Scrolls
  ~bgscrl3i~ // Mirianne's Scroll
  ~scrl2j~   // Gorion's Letter
  ~scrl2k~   // Slythe's Letter
  ~scrl2l~   // Sarevok's Letter
  ~scrl2m~   // Sarevok's Letter
  ~scrl2n~   // Prat's Letter
  ~scrl2o~   // Shalak's Letter
  ~scrl2p~   // Shalak's Letter
  ~scrl2q~   // Shalak's Letter
  ~scrl2r~   // Kizska's Letter
  ~scrl2s~   // Davaeorn's Letter
  ~scrl2t~   // Davaeorn's Letter
  ~scrl2u~   // Davaeorn's Letter
  ~scrl2v~   // Mulhaney's Letter
  ~scrl2w~   // Mulhaney's Letter
  ~scrl2x~   // Tranzig's Letter
  ~scrl2y~   // Tazok's Letter
  ~scrl2z~   // Tazok's Letter
  ~scrl3a~   // Rieltar's Letter
  ~scrl3b~   // Nimbul's Letter
  ~scrl3c~   // Rieltar's Letter
  ~scrl3d~   // Alaundo's Letter
  ~scrl3e~   // Alaundo's Letter
  ~scrl3f~   // The Diary of Sarevok
  ~scrl3i~   // Mirianne's Scroll
  ~scrl3z~   // Gorion's Scroll
  ~scrl5r~   // Andris' Journal
  ~scrl5s~   // Dezkiel's Scroll
  ~scrla9~   // Dradeel's Scroll
  ~scrlaa~   // Dradeel's Scroll
  ~scrlab~   // Dradeel's Recipe Page
  ~scrlac~   // Dradeel's Recipe Page
  ~scrlad~   // Dradeel's Recipe Page
  ~scrladj~  // Firkraag's Note
  ~scrlauto~ // Autograph
  ~scrldra~  // Drasus's Scroll
  ~scrlhp~   // Harpers' Note
  ~scrlick~  // Illithid Correspondence
  ~scrlkar~  // Karlat's Bounty Notice
  ~scrlmz~   // A Note from Mazzy Fentan
  ~scrlnei~  // Neira's Bounty Notice
  ~scrltar~  // Tarnesh's Bounty Notice
  ~scrlvail~ // Vail's or Quenash's Letter?
  ~scrlzha~  // Unknown Scroll?
BEGIN
  ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
    COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
      WRITE_BYTE 0x1c 0x25
    END
  END
END

// Item charges fixes

COPY_EXISTING_REGEXP ~^.+\.cre$~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) BEGIN
    PATCH_FOR_EACH ~item~ IN // Wands
      ~WAND02~   // Wand of Fear
      ~WAND03~   // Wand of Magic Missile
      ~WAND04~   // Wand of Paralyzation
      ~WAND05~   // Wand of Fire
      ~WAND06~   // Wand of Frost
      ~WAND07~   // Wand of Lightning
      ~WAND08~   // Wand of Sleep
      ~WAND09~   // Wand of Polymorphing
      ~WAND10~   // Wand of Monster Summoning
      ~WAND11~   // Wand of the Heavens
      ~WAND12~   // Wand of Magic Missiles (BGEE)
      ~BGWAND12~ // Wand of Magic Missiles (BGT)
      ~WAND12_~  // Wand of Magic Missiles (EET)
      ~WAND13~   // Wand of Cloudkill
      ~WAND18~   // Wand of Spell Striking
      ~WAND19~   // Wand of Cursing
      ~BDWAND01~ // Wand of Water Elemental Summoning (BGSOD)
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY itm_array CRE_V10_ITEMS
        PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
          READ_ASCII (itm_offset + 0x0) resref
          PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
            READ_SHORT (itm_offset + 0xa) charges_1
            PATCH_IF (charges_1 > 10) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_1% => setting them to 10..."
              WRITE_SHORT (itm_offset + 0xa) 10
            END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 1 charge, 1st header
      ~AMUL20~   // Kaligum's Amulet of Magic Resistance
      ~AMUL25~   // Amulet of Spell Warding
      ~AMUL26~   // Amulet of Cheetah Speed
      ~BELT09~   // Girdle of Trollish Fortitude
      ~BOOT09~   // Boots of the Shifting Sands
      ~BOOT11~   // Boots of Etherealness
      ~BRAC16~   // Bracers of the Blinding Strike
      ~BRAC20~   // Gauntlets of Healing
      ~BRAC23~   // Blessed Bracers
      ~CHAN10~   // Prismatic Chain +4
      ~CLCK04~   // Cloak of the Wolf
      ~CLCK07~   // Cloak of the Nymph
      ~CCLCK08~  // Algernon's Cloak
      ~CLCK27~   // Cloak of the Sewers
      ~HELM16~   // Helm of Brilliance
      ~HELM17~   // Skull of Death
      ~HELM18~   // Pearly White Ioun Stone
      ~HELM30~   // Master Thief's Hood
      ~LEAT18~   // Armor of the Viper +4
      ~MISC2P~   // Greagan's Harp
      ~MISC3A~   // Book of Infinite Spells
      ~MISC3C~   // Efreeti Bottle
      ~MISC3D~   // Golden Lion Figurine
      ~MISC3E~   // Black Spider Figurine
      ~MISC3F~   // Jade Hound Figurine
      ~MISC3I~   // Silver Horn of Valhalla
      ~MISC3J~   // Bronze Horn of Valhalla
      ~MISC3K~   // Iron Horn of Valhalla
      ~MISC73~   // The Horn of Kazgaroth
      ~MISC7T~   // Moon Dog Figurine
      ~MISC7Y~   // Thrall Collar
      ~FIGURE01~ // Shakti Figurine
      ~TOME01~   // Flesh Golem Manual
      ~TOME02~   // Clay Golem Manual
      ~TOME03~   // Stone Golem Manual
      ~TOME04~   // Juggernaut Golem Manual
      ~NPMISC1~  // Jansen Spectroscopes
      ~NPSHLD~   // Delryn Family Shield +2
      ~VICARM~   // Shar's Blessing +5
      ~RING20~   // Ring of Energy
      ~RING26~   // Ring of Djinni Summoning
      ~RING27~   // Ring of Fire Control
      ~RING28~   // Ring of Air Control
      ~RING29~   // Ring of Earth Control
      ~RING30~   // Ring of Human Influence
      ~RING34~   // Ring of Spell Turning
      ~RING42~   // Ring of the Wraith
      ~RODS01~   // Rod of Absorption
      ~RODS03~   // Rod of Resurrection
      ~RODS06~   // Rod of Reversal
      ~WA2HELM~  // Shadow Veil
      ~WAND14~   // Web Sack
      ~WAND15~   // Rod of the Apprenti
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY itm_array CRE_V10_ITEMS
        PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
          READ_ASCII (itm_offset + 0x0) resref
          PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
            READ_SHORT (itm_offset + 0xa) charges_1
            PATCH_IF (charges_1 > 1) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_1% => setting them to 1..."
              WRITE_SHORT (itm_offset + 0xa) 1
    		END
            PATCH_IF (charges_1 < 1) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_1% => setting them to 1..."
              WRITE_SHORT (itm_offset + 0xa) 1
    		END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 1 charge, 2nd header
      ~BLUN27~   // Club of Detonation +5 (2nd)
      ~BOW20~    // Darkfire Bow +4 (2nd)
      ~BOW21~    // Darkfire Bow +5 (2nd)
      ~BRAC23~   // Blessed Bracers (2nd)
      ~CLCK27~   // Cloak of the Sewers (2nd)
      ~HAMM11~   // Runehammer +5 (2nd)
      ~HELM16~   // Helm of Brilliance (2nd)
      ~MISC5T~   // Shaman's Staff (2nd)
      ~RING27~   // Ring of Fire Control (2nd)
      ~RING28~   // Ring of Air Control (2nd)
      ~RING29~   // Ring of Earth Control (2nd)
      ~RING39~   // Ring of Kangaxx (2nd)
      ~STAF09~   // Staff of Command +3 (2nd)
      ~STAF10~   // Staff of Curing +1 (2nd)
      ~STAF12~   // Staff of Power +3 (2nd)
      ~STAF13~   // Staff of Thunder and Lightning +2 (2nd)
      ~STAF14~   // Staff of the Woodlands (2nd)
      ~STAF15~   // Staff of Air +2 (2nd)
      ~STAF16~   // Staff of Earth +2 (2nd)
      ~STAF17~   // Staff of Fire +2 (2nd)
      ~STAF20~   // Staff of Rynn +3 (2nd)
      ~SW1H26~   // Ilbratha +1 (2nd)
      ~SW1H31~   // Daystar +4 (2nd)
      ~SW1H33~   // Ras +2 (2nd)
      ~SW1H64~   // Purifier +5 (2nd)
      ~SW1H68~   // Spectral Brand +4 (2nd)
      ~SW1H69~   // Spectral Brand +5 (2nd)
      ~SW1H70~   // Hindo's Doom +4 (2nd)
      ~SW2H10~   // Carsomyr +4 (2nd)
      ~WAND15~   // Rod of the Apprenti (2nd)
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY itm_array CRE_V10_ITEMS
        PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
          READ_ASCII (itm_offset + 0x0) resref
          PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
            READ_SHORT (itm_offset + 0xc) charges_2
            PATCH_IF (charges_2 > 1) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, secondary charges: %charges_2% => setting them to 1..."
              WRITE_SHORT (itm_offset + 0xc) 1
    		END
            PATCH_IF (charges_2 < 1) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, secondary charges: %charges_2% => setting them to 1..."
              WRITE_SHORT (itm_offset + 0xc) 1
    		END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 1 charge, 3rd header
      ~HAMM11~   // Runehammer +5 (3rd)
      ~HELM16~   // Helm of Brilliance (3rd)
      ~STAF11~   // Staff of the Magi +5 (3rd)
      ~STAF12~   // Staff of Power +3 (3rd)
      ~STAF13~   // Staff of Thunder and Lightning +2 (3rd)
      ~STAF14~   // Staff of the Woodlands (3rd)
      ~SW1H51~   // Celestial Fury (3rd)
      ~SW1H65~   // Purifier +5 (3rd)
      ~SW1H69~   // Spectral Brand +5 (3rd)
      ~SW1H70~   // Hindo's Doom +5 (3rd)
      ~WAND15~   // Rod of the Apprenti (3rd)
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY itm_array CRE_V10_ITEMS
        PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
          READ_ASCII (itm_offset + 0x0) resref
          PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
            READ_SHORT (itm_offset + 0xe) charges_3
            PATCH_IF (charges_3 > 1) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, tertiary charges: %charges_3% => setting them to 1..."
              WRITE_SHORT (itm_offset + 0xe) 1
    		END
            PATCH_IF (charges_3 < 1) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, tertiary charges: %charges_3% => setting them to 1..."
              WRITE_SHORT (itm_offset + 0xe) 1
    		END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 3 charges, 1st header
      ~HELM31~   // Horned Helm of the Rock
      ~MISC3H~   // Horn of Blasting
      ~MISC3L~   // Horn of Silence
      ~MISC3M~   // Harp of Discord
      ~MISC3N~   // Azlaer's Harp
      ~MISC3O~   // Methild's Harp
      ~MISC3P~   // Glasses of Identification
      ~RING05~   // Ring of Invisibility
      ~RING33~   // Ring of the Ram
      ~RING39~   // Ring of Kangaxx
      ~WAND12~   // Rod of Wonder
      ~REGISAMU~ // Ruby Pendant of Beguiling
      ~WA2HARP~  // Harp of Pandemonium
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY itm_array CRE_V10_ITEMS
        PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
          READ_ASCII (itm_offset + 0x0) resref
          PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
            READ_SHORT (itm_offset + 0xa) charges_1
            PATCH_IF (charges_1 > 3) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_1% => setting them to 3..."
              WRITE_SHORT (itm_offset + 0xa) 3
    		END
            PATCH_IF (charges_1 < 3) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_1% => setting them to 3..."
              WRITE_SHORT (itm_offset + 0xa) 3
    		END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 3 charges, 2nd header
      ~STAF11~   // Staff of the Magi +5 (2nd)
      ~SW1H51~   // Celestial Fury (2nd)
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY itm_array CRE_V10_ITEMS
        PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
          READ_ASCII (itm_offset + 0x0) resref
          PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
            READ_SHORT (itm_offset + 0xc) charges_2
            PATCH_IF (charges_2 > 3) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_2% => setting them to 3..."
              WRITE_SHORT (itm_offset + 0xc) 3
    		END
            PATCH_IF (charges_2 < 3) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_2% => setting them to 3..."
              WRITE_SHORT (itm_offset + 0xc) 3
    		END
          END
        END
      END
    END
  END
BUT_ONLY

COPY_EXISTING_REGEXP ~^.+\.sto$~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x9b) BEGIN
    PATCH_FOR_EACH ~item~ IN // Wands
      ~WAND02~   // Wand of Fear
      ~WAND03~   // Wand of Magic Missile
      ~WAND04~   // Wand of Paralyzation
      ~WAND05~   // Wand of Fire
      ~WAND06~   // Wand of Frost
      ~WAND07~   // Wand of Lightning
      ~WAND08~   // Wand of Sleep
      ~WAND09~   // Wand of Polymorphing
      ~WAND10~   // Wand of Monster Summoning
      ~WAND11~   // Wand of the Heavens
      ~WAND12~   // Wand of Magic Missiles (BGEE)
      ~BGWAND12~ // Wand of Magic Missiles (BGT)
      ~WAND12_~  // Wand of Magic Missiles (EET)
      ~WAND13~   // Wand of Cloudkill
      ~WAND18~   // Wand of Spell Striking
      ~WAND19~   // Wand of Cursing
      ~BDWAND01~ // Wand of Water Elemental Summoning (BGSOD)
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY itm_array STO_V10_ITEMS_SOLD
        PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
          READ_ASCII (itm_offset + 0x0) resref
          PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
            READ_SHORT (itm_offset + 0xa) charges_1
            PATCH_IF (charges_1 > 10) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_1% => setting them to 10..."
              WRITE_SHORT (itm_offset + 0xa) 10
            END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 1 charge, 1st header
      ~AMUL20~   // Kaligum's Amulet of Magic Resistance
      ~AMUL25~   // Amulet of Spell Warding
      ~AMUL26~   // Amulet of Cheetah Speed
      ~BELT09~   // Girdle of Trollish Fortitude
      ~BOOT09~   // Boots of the Shifting Sands
      ~BOOT11~   // Boots of Etherealness
      ~BRAC16~   // Bracers of the Blinding Strike
      ~BRAC20~   // Gauntlets of Healing
      ~BRAC23~   // Blessed Bracers
      ~CHAN10~   // Prismatic Chain +4
      ~CLCK04~   // Cloak of the Wolf
      ~CLCK07~   // Cloak of the Nymph
      ~CCLCK08~  // Algernon's Cloak
      ~CLCK27~   // Cloak of the Sewers
      ~HELM16~   // Helm of Brilliance
      ~HELM17~   // Skull of Death
      ~HELM18~   // Pearly White Ioun Stone
      ~HELM30~   // Master Thief's Hood
      ~LEAT18~   // Armor of the Viper +4
      ~MISC2P~   // Greagan's Harp
      ~MISC3A~   // Book of Infinite Spells
      ~MISC3C~   // Efreeti Bottle
      ~MISC3D~   // Golden Lion Figurine
      ~MISC3E~   // Black Spider Figurine
      ~MISC3F~   // Jade Hound Figurine
      ~MISC3I~   // Silver Horn of Valhalla
      ~MISC3J~   // Bronze Horn of Valhalla
      ~MISC3K~   // Iron Horn of Valhalla
      ~MISC73~   // The Horn of Kazgaroth
      ~MISC7T~   // Moon Dog Figurine
      ~MISC7Y~   // Thrall Collar
      ~FIGURE01~ // Shakti Figurine
      ~TOME01~   // Flesh Golem Manual
      ~TOME02~   // Clay Golem Manual
      ~TOME03~   // Stone Golem Manual
      ~TOME04~   // Juggernaut Golem Manual
      ~NPMISC1~  // Jansen Spectroscopes
      ~NPSHLD~   // Delryn Family Shield +2
      ~VICARM~   // Shar's Blessing +5
      ~RING20~   // Ring of Energy
      ~RING26~   // Ring of Djinni Summoning
      ~RING27~   // Ring of Fire Control
      ~RING28~   // Ring of Air Control
      ~RING29~   // Ring of Earth Control
      ~RING30~   // Ring of Human Influence
      ~RING34~   // Ring of Spell Turning
      ~RING42~   // Ring of the Wraith
      ~RODS01~   // Rod of Absorption
      ~RODS03~   // Rod of Resurrection
      ~RODS06~   // Rod of Reversal
      ~WA2HELM~  // Shadow Veil
      ~WAND14~   // Web Sack
      ~WAND15~   // Rod of the Apprenti
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY itm_array STO_V10_ITEMS_SOLD
        PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
          READ_ASCII (itm_offset + 0x0) resref
          PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
            READ_SHORT (itm_offset + 0xa) charges_1
            PATCH_IF (charges_1 > 1) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_1% => setting them to 1..."
              WRITE_SHORT (itm_offset + 0xa) 1
    		END
            PATCH_IF (charges_1 < 1) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_1% => setting them to 1..."
              WRITE_SHORT (itm_offset + 0xa) 1
    		END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 1 charge, 2nd header
      ~BLUN27~   // Club of Detonation +5 (2nd)
      ~BOW20~    // Darkfire Bow +4 (2nd)
      ~BOW21~    // Darkfire Bow +5 (2nd)
      ~BRAC23~   // Blessed Bracers (2nd)
      ~CLCK27~   // Cloak of the Sewers (2nd)
      ~HAMM11~   // Runehammer +5 (2nd)
      ~HELM16~   // Helm of Brilliance (2nd)
      ~MISC5T~   // Shaman's Staff (2nd)
      ~RING27~   // Ring of Fire Control (2nd)
      ~RING28~   // Ring of Air Control (2nd)
      ~RING29~   // Ring of Earth Control (2nd)
      ~RING39~   // Ring of Kangaxx (2nd)
      ~STAF09~   // Staff of Command +3 (2nd)
      ~STAF10~   // Staff of Curing +1 (2nd)
      ~STAF12~   // Staff of Power +3 (2nd)
      ~STAF13~   // Staff of Thunder and Lightning +2 (2nd)
      ~STAF14~   // Staff of the Woodlands (2nd)
      ~STAF15~   // Staff of Air +2 (2nd)
      ~STAF16~   // Staff of Earth +2 (2nd)
      ~STAF17~   // Staff of Fire +2 (2nd)
      ~STAF20~   // Staff of Rynn +3 (2nd)
      ~SW1H26~   // Ilbratha +1 (2nd)
      ~SW1H31~   // Daystar +4 (2nd)
      ~SW1H33~   // Ras +2 (2nd)
      ~SW1H64~   // Purifier +5 (2nd)
      ~SW1H68~   // Spectral Brand +4 (2nd)
      ~SW1H69~   // Spectral Brand +5 (2nd)
      ~SW1H70~   // Hindo's Doom +4 (2nd)
      ~SW2H10~   // Carsomyr +4 (2nd)
      ~WAND15~   // Rod of the Apprenti (2nd)
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY itm_array STO_V10_ITEMS_SOLD
        PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
          READ_ASCII (itm_offset + 0x0) resref
          PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
            READ_SHORT (itm_offset + 0xc) charges_2
            PATCH_IF (charges_2 > 1) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, secondary charges: %charges_2% => setting them to 1..."
              WRITE_SHORT (itm_offset + 0xc) 1
    		END
            PATCH_IF (charges_2 < 1) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, secondary charges: %charges_2% => setting them to 1..."
              WRITE_SHORT (itm_offset + 0xc) 1
    		END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 1 charge, 3rd header
      ~HAMM11~   // Runehammer +5 (3rd)
      ~HELM16~   // Helm of Brilliance (3rd)
      ~STAF11~   // Staff of the Magi +5 (3rd)
      ~STAF12~   // Staff of Power +3 (3rd)
      ~STAF13~   // Staff of Thunder and Lightning +2 (3rd)
      ~STAF14~   // Staff of the Woodlands (3rd)
      ~SW1H51~   // Celestial Fury (3rd)
      ~SW1H65~   // Purifier +5 (3rd)
      ~SW1H69~   // Spectral Brand +5 (3rd)
      ~SW1H70~   // Hindo's Doom +5 (3rd)
      ~WAND15~   // Rod of the Apprenti (3rd)
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY itm_array STO_V10_ITEMS_SOLD
        PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
          READ_ASCII (itm_offset + 0x0) resref
          PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
            READ_SHORT (itm_offset + 0xe) charges_3
            PATCH_IF (charges_3 > 1) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, tertiary charges: %charges_3% => setting them to 1..."
              WRITE_SHORT (itm_offset + 0xe) 1
    		END
            PATCH_IF (charges_3 < 1) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, tertiary charges: %charges_3% => setting them to 1..."
              WRITE_SHORT (itm_offset + 0xe) 1
    		END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 3 charges, 1st header
      ~HELM31~   // Horned Helm of the Rock
      ~MISC3H~   // Horn of Blasting
      ~MISC3L~   // Horn of Silence
      ~MISC3M~   // Harp of Discord
      ~MISC3N~   // Azlaer's Harp
      ~MISC3O~   // Methild's Harp
      ~MISC3P~   // Glasses of Identification
      ~RING05~   // Ring of Invisibility
      ~RING33~   // Ring of the Ram
      ~RING39~   // Ring of Kangaxx
      ~WAND12~   // Rod of Wonder
      ~REGISAMU~ // Ruby Pendant of Beguiling
      ~WA2HARP~  // Harp of Pandemonium
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY itm_array STO_V10_ITEMS_SOLD
        PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
          READ_ASCII (itm_offset + 0x0) resref
          PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
            READ_SHORT (itm_offset + 0xa) charges_1
            PATCH_IF (charges_1 > 3) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_1% => setting them to 3..."
              WRITE_SHORT (itm_offset + 0xa) 3
    		END
            PATCH_IF (charges_1 < 3) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_1% => setting them to 3..."
              WRITE_SHORT (itm_offset + 0xa) 3
    		END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 3 charges, 2nd header
      ~STAF11~   // Staff of the Magi +5 (2nd)
      ~SW1H51~   // Celestial Fury (2nd)
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY itm_array STO_V10_ITEMS_SOLD
        PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
          READ_ASCII (itm_offset + 0x0) resref
          PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
            READ_SHORT (itm_offset + 0xc) charges_2
            PATCH_IF (charges_2 > 3) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_2% => setting them to 3..."
              WRITE_SHORT (itm_offset + 0xc) 3
    		END
            PATCH_IF (charges_2 < 3) BEGIN
              PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_2% => setting them to 3..."
              WRITE_SHORT (itm_offset + 0xc) 3
    		END
          END
        END
      END
    END
  END
BUT_ONLY

COPY_EXISTING_REGEXP ~^.+\.are$~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x11b) BEGIN
    PATCH_FOR_EACH ~item~ IN // Wands
      ~WAND02~   // Wand of Fear
      ~WAND03~   // Wand of Magic Missile
      ~WAND04~   // Wand of Paralyzation
      ~WAND05~   // Wand of Fire
      ~WAND06~   // Wand of Frost
      ~WAND07~   // Wand of Lightning
      ~WAND08~   // Wand of Sleep
      ~WAND09~   // Wand of Polymorphing
      ~WAND10~   // Wand of Monster Summoning
      ~WAND11~   // Wand of the Heavens
      ~WAND12~   // Wand of Magic Missiles (BGEE)
      ~BGWAND12~ // Wand of Magic Missiles (BGT)
      ~WAND12_~  // Wand of Magic Missiles (EET)
      ~WAND13~   // Wand of Cloudkill
      ~WAND18~   // Wand of Spell Striking
      ~WAND19~   // Wand of Cursing
      ~BDWAND01~ // Wand of Water Elemental Summoning (BGSOD)
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY container_array ARE_V10_CONTAINERS
        PHP_EACH ~container_array~ AS ~int~ => ~container_offset~ BEGIN
          GET_OFFSET_ARRAY2 itm_array container_offset ARE_V10_ITEMS
          PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
            READ_ASCII (itm_offset + 0x0) resref
            PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
              READ_ASCII (container_offset + 0x0) container_name (32) NULL
              READ_SHORT (itm_offset + 0xa) charges_1
              PATCH_IF (charges_1 > 10) BEGIN
                PATCH_PRINT "~%SOURCE_FILE%~: ~%container_name%~, ~%item%.itm~, primary charges: %charges_1% => setting them to 10..."
                WRITE_SHORT (itm_offset + 0xa) 10
              END
            END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 1 charge, 1st header
      ~AMUL20~   // Kaligum's Amulet of Magic Resistance
      ~AMUL25~   // Amulet of Spell Warding
      ~AMUL26~   // Amulet of Cheetah Speed
      ~BELT09~   // Girdle of Trollish Fortitude
      ~BOOT09~   // Boots of the Shifting Sands
      ~BOOT11~   // Boots of Etherealness
      ~BRAC16~   // Bracers of the Blinding Strike
      ~BRAC20~   // Gauntlets of Healing
      ~BRAC23~   // Blessed Bracers
      ~CHAN10~   // Prismatic Chain +4
      ~CLCK04~   // Cloak of the Wolf
      ~CLCK07~   // Cloak of the Nymph
      ~CCLCK08~  // Algernon's Cloak
      ~CLCK27~   // Cloak of the Sewers
      ~HELM16~   // Helm of Brilliance
      ~HELM17~   // Skull of Death
      ~HELM18~   // Pearly White Ioun Stone
      ~HELM30~   // Master Thief's Hood
      ~LEAT18~   // Armor of the Viper +4
      ~MISC2P~   // Greagan's Harp
      ~MISC3A~   // Book of Infinite Spells
      ~MISC3C~   // Efreeti Bottle
      ~MISC3D~   // Golden Lion Figurine
      ~MISC3E~   // Black Spider Figurine
      ~MISC3F~   // Jade Hound Figurine
      ~MISC3I~   // Silver Horn of Valhalla
      ~MISC3J~   // Bronze Horn of Valhalla
      ~MISC3K~   // Iron Horn of Valhalla
      ~MISC73~   // The Horn of Kazgaroth
      ~MISC7T~   // Moon Dog Figurine
      ~MISC7Y~   // Thrall Collar
      ~FIGURE01~ // Shakti Figurine
      ~TOME01~   // Flesh Golem Manual
      ~TOME02~   // Clay Golem Manual
      ~TOME03~   // Stone Golem Manual
      ~TOME04~   // Juggernaut Golem Manual
      ~NPMISC1~  // Jansen Spectroscopes
      ~NPSHLD~   // Delryn Family Shield +2
      ~VICARM~   // Shar's Blessing +5
      ~RING20~   // Ring of Energy
      ~RING26~   // Ring of Djinni Summoning
      ~RING27~   // Ring of Fire Control
      ~RING28~   // Ring of Air Control
      ~RING29~   // Ring of Earth Control
      ~RING30~   // Ring of Human Influence
      ~RING34~   // Ring of Spell Turning
      ~RING42~   // Ring of the Wraith
      ~RODS01~   // Rod of Absorption
      ~RODS03~   // Rod of Resurrection
      ~RODS06~   // Rod of Reversal
      ~WA2HELM~  // Shadow Veil
      ~WAND14~   // Web Sack
      ~WAND15~   // Rod of the Apprenti
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY container_array ARE_V10_CONTAINERS
        PHP_EACH ~container_array~ AS ~int~ => ~container_offset~ BEGIN
          GET_OFFSET_ARRAY2 itm_array container_offset ARE_V10_ITEMS
          PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
            READ_ASCII (itm_offset + 0x0) resref
            PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
              READ_ASCII (container_offset + 0x0) container_name (32) NULL
              READ_SHORT (itm_offset + 0xa) charges_1
              PATCH_IF (charges_1 > 1) BEGIN
                PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_1% => setting them to 1..."
                WRITE_SHORT (itm_offset + 0xa) 1
    		  END
              PATCH_IF (charges_1 < 1) BEGIN
                PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_1% => setting them to 1..."
                WRITE_SHORT (itm_offset + 0xa) 1
    		  END
            END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 1 charge, 2nd header
      ~BLUN27~   // Club of Detonation +5 (2nd)
      ~BOW20~    // Darkfire Bow +4 (2nd)
      ~BOW21~    // Darkfire Bow +5 (2nd)
      ~BRAC23~   // Blessed Bracers (2nd)
      ~CLCK27~   // Cloak of the Sewers (2nd)
      ~HAMM11~   // Runehammer +5 (2nd)
      ~HELM16~   // Helm of Brilliance (2nd)
      ~MISC5T~   // Shaman's Staff (2nd)
      ~RING27~   // Ring of Fire Control (2nd)
      ~RING28~   // Ring of Air Control (2nd)
      ~RING29~   // Ring of Earth Control (2nd)
      ~RING39~   // Ring of Kangaxx (2nd)
      ~STAF09~   // Staff of Command +3 (2nd)
      ~STAF10~   // Staff of Curing +1 (2nd)
      ~STAF12~   // Staff of Power +3 (2nd)
      ~STAF13~   // Staff of Thunder and Lightning +2 (2nd)
      ~STAF14~   // Staff of the Woodlands (2nd)
      ~STAF15~   // Staff of Air +2 (2nd)
      ~STAF16~   // Staff of Earth +2 (2nd)
      ~STAF17~   // Staff of Fire +2 (2nd)
      ~STAF20~   // Staff of Rynn +3 (2nd)
      ~SW1H26~   // Ilbratha +1 (2nd)
      ~SW1H31~   // Daystar +4 (2nd)
      ~SW1H33~   // Ras +2 (2nd)
      ~SW1H64~   // Purifier +5 (2nd)
      ~SW1H68~   // Spectral Brand +4 (2nd)
      ~SW1H69~   // Spectral Brand +5 (2nd)
      ~SW1H70~   // Hindo's Doom +4 (2nd)
      ~SW2H10~   // Carsomyr +4 (2nd)
      ~WAND15~   // Rod of the Apprenti (2nd)
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY container_array ARE_V10_CONTAINERS
        PHP_EACH ~container_array~ AS ~int~ => ~container_offset~ BEGIN
          GET_OFFSET_ARRAY2 itm_array container_offset ARE_V10_ITEMS
          PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
            READ_ASCII (itm_offset + 0x0) resref
            PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
              READ_ASCII (container_offset + 0x0) container_name (32) NULL
              READ_SHORT (itm_offset + 0xc) charges_2
              PATCH_IF (charges_2 > 1) BEGIN
                PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, secondary charges: %charges_2% => setting them to 1..."
                WRITE_SHORT (itm_offset + 0xc) 1
    		  END
              PATCH_IF (charges_2 < 1) BEGIN
                PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, secondary charges: %charges_2% => setting them to 1..."
                WRITE_SHORT (itm_offset + 0xc) 1
    		  END
            END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 1 charge, 3rd header
      ~HAMM11~   // Runehammer +5 (3rd)
      ~HELM16~   // Helm of Brilliance (3rd)
      ~STAF11~   // Staff of the Magi +5 (3rd)
      ~STAF12~   // Staff of Power +3 (3rd)
      ~STAF13~   // Staff of Thunder and Lightning +2 (3rd)
      ~STAF14~   // Staff of the Woodlands (3rd)
      ~SW1H51~   // Celestial Fury (3rd)
      ~SW1H65~   // Purifier +5 (3rd)
      ~SW1H69~   // Spectral Brand +5 (3rd)
      ~SW1H70~   // Hindo's Doom +5 (3rd)
      ~WAND15~   // Rod of the Apprenti (3rd)
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY container_array ARE_V10_CONTAINERS
        PHP_EACH ~container_array~ AS ~int~ => ~container_offset~ BEGIN
          GET_OFFSET_ARRAY2 itm_array container_offset ARE_V10_ITEMS
          PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
            READ_ASCII (itm_offset + 0x0) resref
            PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
              READ_ASCII (container_offset + 0x0) container_name (32) NULL
              READ_SHORT (itm_offset + 0xe) charges_3
              PATCH_IF (charges_3 > 1) BEGIN
                PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, tertiary charges: %charges_3% => setting them to 1..."
                WRITE_SHORT (itm_offset + 0xe) 1
    		  END
              PATCH_IF (charges_3 < 1) BEGIN
                PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, tertiary charges: %charges_3% => setting them to 1..."
                WRITE_SHORT (itm_offset + 0xe) 1
    		  END
            END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 3 charges, 1st header
      ~HELM31~   // Horned Helm of the Rock
      ~MISC3H~   // Horn of Blasting
      ~MISC3L~   // Horn of Silence
      ~MISC3M~   // Harp of Discord
      ~MISC3N~   // Azlaer's Harp
      ~MISC3O~   // Methild's Harp
      ~MISC3P~   // Glasses of Identification
      ~RING05~   // Ring of Invisibility
      ~RING33~   // Ring of the Ram
      ~RING39~   // Ring of Kangaxx
      ~WAND12~   // Rod of Wonder
      ~REGISAMU~ // Ruby Pendant of Beguiling
      ~WA2HARP~  // Harp of Pandemonium
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY container_array ARE_V10_CONTAINERS
        PHP_EACH ~container_array~ AS ~int~ => ~container_offset~ BEGIN
          GET_OFFSET_ARRAY2 itm_array container_offset ARE_V10_ITEMS
          PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
            READ_ASCII (itm_offset + 0x0) resref
            PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
              READ_ASCII (container_offset + 0x0) container_name (32) NULL
              READ_SHORT (itm_offset + 0xa) charges_1
              PATCH_IF (charges_1 > 3) BEGIN
                PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_1% => setting them to 3..."
                WRITE_SHORT (itm_offset + 0xa) 3
    		  END
              PATCH_IF (charges_1 < 3) BEGIN
                PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_1% => setting them to 3..."
                WRITE_SHORT (itm_offset + 0xa) 3
    		  END
            END
          END
        END
      END
    END
    PATCH_FOR_EACH ~item~ IN // 3 charges, 2nd header
      ~STAF11~   // Staff of the Magi +5 (2nd)
      ~SW1H51~   // Celestial Fury (2nd)
    BEGIN
      PATCH_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) BEGIN
        GET_OFFSET_ARRAY container_array ARE_V10_CONTAINERS
        PHP_EACH ~container_array~ AS ~int~ => ~container_offset~ BEGIN
          GET_OFFSET_ARRAY2 itm_array container_offset ARE_V10_ITEMS
          PHP_EACH ~itm_array~ AS ~int~ => ~itm_offset~ BEGIN
            READ_ASCII (itm_offset + 0x0) resref
            PATCH_IF (~%resref%~ STRING_EQUAL_CASE ~%item%~) BEGIN
              READ_ASCII (container_offset + 0x0) container_name (32) NULL
              READ_SHORT (itm_offset + 0xc) charges_2
              PATCH_IF (charges_2 > 3) BEGIN
                PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_2% => setting them to 3..."
                WRITE_SHORT (itm_offset + 0xc) 3
    		  END
              PATCH_IF (charges_2 < 3) BEGIN
                PATCH_PRINT "~%SOURCE_FILE%~: ~%item%.itm~, primary charges: %charges_2% => setting them to 3..."
                WRITE_SHORT (itm_offset + 0xc) 3
    		  END
            END
          END
        END
      END
    END
  END
BUT_ONLY


// 1pp & EE fixes

DEFINE_ACTION_MACRO ~Locations~ BEGIN
// for weapons
OUTER_SET wgrey = 16
OUTER_SET wteal = 17
OUTER_SET wpink = 18
OUTER_SET wyellow = 19
OUTER_SET wred = 20
OUTER_SET wblue = 21
OUTER_SET wgreen = 22
// for helmets
OUTER_SET hgrey = 48
OUTER_SET hteal = 49
OUTER_SET hpink = 50
OUTER_SET hyellow = 51
OUTER_SET hred = 52
OUTER_SET hblue = 53
OUTER_SET hgreen = 54
// for shields
OUTER_SET sgrey = 32
OUTER_SET steal = 33
OUTER_SET spink = 34
OUTER_SET syellow = 35
OUTER_SET sred = 36
OUTER_SET sblue = 37
OUTER_SET sgreen = 38
// for armour
OUTER_SET agrey = 0
OUTER_SET ateal = 1
OUTER_SET apink = 2
OUTER_SET ayellow = 3
OUTER_SET ared = 4
OUTER_SET ablue = 5
OUTER_SET agreen = 6
END

DEFINE_PATCH_MACRO ~clear~ BEGIN
SET opcode_to_delete = 7
LAUNCH_PATCH_MACRO DELETE_ITEM_EQEFFECT
SET opcode_to_delete = 8
LAUNCH_PATCH_MACRO DELETE_ITEM_EQEFFECT
SET opcode_to_delete = 9
LAUNCH_PATCH_MACRO DELETE_ITEM_EQEFFECT
END

DEFINE_PATCH_MACRO ~colour~ BEGIN
SET opcode = 7      // Set opcode
SET target = 1      // target type
SET timing = 2      // timing type
SET power = 0      // power
SET resist_dispel = 0  // dispel/resitance
SET duration = 0    // duration
SET probability1 = 100  // probability 1
SET probability2 = 0  // probability 2
SPRINT "resource" ""     // resource
SET dicenumber = 0    // dice number
SET dicesize = 0    // dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0    // saving throw bonus
SET parameter1 = gradient // set colour gradient
SET parameter2 = location // set location
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
END

DEFINE_PATCH_MACRO ~pulse~ BEGIN
SET opcode = 9    // Set opcode
SET target = 1      // target type
SET timing = 2      // timing type
SET power = 0      // power
SET resist_dispel = 0  // dispel/resitance
SET duration = 0    // duration
SET probability1 = 100  // probability 1
SET probability2 = 0  // probability 2
SPRINT "resource" ""     // resource
SET dicenumber = 0    // dice number
SET dicesize = 0    // dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0    // saving throw bonus
SET setrgb = (setb << 24)+(setg << 16)+(setr << 8) // Set RGB
SET parameter1 = setrgb
SET settwo = (speed << 16)+(location) // Set location and speed
SET parameter2 = settwo
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
END

DEFINE_PATCH_MACRO ~glow~ BEGIN
SET opcode = 8    // Set opcode
SET target = 1      // target type
SET timing = 2      // timing type
SET power = 0      // power
SET resist_dispel = 0  // dispel/resitance
SET duration = 0    // duration
SET probability1 = 100  // probability 1
SET probability2 = 0  // probability 2
SPRINT "resource" ""     // resource
SET dicenumber = 0    // dice number
SET dicesize = 0    // dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0    // saving throw bonus
SET setrgb = (setb << 24)+(setg << 16)+(setr << 8) // Set RGB
SET parameter1 = setrgb
SET parameter2 = location // set location
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
END

LAUNCH_ACTION_MACRO ~Locations~

OUTER_SET pcolour = 1

ACTION_IF 1pp_ee_helms_shields_colors = 2 BEGIN
  OUTER_SET pcolour = 2
END

ACTION_IF 1pp_ee_helms_shields_colors = 3 BEGIN
  OUTER_SET pcolour = 4
END

INCLUDE ~item_rev/components/main/1pp.tpa~

// Short bows fix
ACTION_IF (FILE_EXISTS_IN_GAME ~wplbsg1.bam~) BEGIN
  COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ override PATCH_IF SOURCE_SIZE>0x71 BEGIN
    LPM identify_item
    PATCH_IF short_bow BEGIN
      WRITE_ASCII 0x22 ~BS~
	  WRITE_ASCII 0x44 ~GBOW02~
    END
  END
  ACTION_FOR_EACH resource IN // Fix creature bows
    ~compb05~
    ~compb06~
    ~compb08~
    ~compb18~
  BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
      COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
      PATCH_IF (SOURCE_SIZE > 0x71) BEGIN 
        WRITE_ASCII 0x22 ~BW~
		WRITE_ASCII 0x44 ~GBOW02~
      END
    END
  END
END

// Bastard swords fix
ACTION_IF (FILE_EXISTS_IN_GAME ~wqls0a1.bam~) BEGIN
  COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ override PATCH_IF SOURCE_SIZE>0x71 BEGIN
    LPM identify_item
    PATCH_IF bastard_sword BEGIN
      WRITE_ASCII 0x22 ~S0~
    END
  END
  ACTION_FOR_EACH resource IN // Fix creature swords
    ~comps01~
    ~comps02~
    ~comps03~
    ~comps42~
  BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
      COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
      PATCH_IF (SOURCE_SIZE > 0x71) BEGIN 
        WRITE_ASCII 0x22 ~S1~
      END
    END
  END
END

// Flame swords fix
ACTION_IF (FILE_EXISTS_IN_GAME ~wqlfsa1.bam~) BEGIN
  ACTION_FOR_EACH resource IN
    ~miscbc~
    ~rodsword~
    ~sw1h27~
    ~sw1h39~
    ~sw1h53~
  BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
      COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
      PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
        WRITE_ASCII 0x22 ~FS~
      END
    END
  END
END

// Flame short swords fix
ACTION_IF (FILE_EXISTS_IN_GAME ~wqlf2a1.bam~) BEGIN
  ACTION_FOR_EACH resource IN
    ~npsw06~
    ~sblade~
    ~sw1h27~
  BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
      COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
      PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
        WRITE_ASCII 0x22 ~F2~
      END
    END
  END
END

// Single-headed Flail of Ages fix
ACTION_IF (FILE_EXISTS_IN_GAME ~wqlf0a1.bam~) BEGIN
  ACTION_IF (FILE_EXISTS_IN_GAME ~blun14g.itm~) BEGIN
    COPY_EXISTING ~blun14g.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      WRITE_ASCII 0x22 ~F0~
      // WRITE_LONG  0x3E 0
      // WRITE_ASCII 0x3A ~IBLUN13B~
      // WRITE_LONG  0x7A 0
      // WRITE_ASCII 0x76 ~IBLUN13B~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 246  // colour index
  SET location = wgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 91  // colour index
  SET location = wred    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 245  // colour index
  SET location = wblue    // location
  LAUNCH_PATCH_MACRO ~colour~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~blun14h.itm~) BEGIN
    COPY_EXISTING ~blun14h.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      WRITE_ASCII 0x22 ~F0~
      // WRITE_LONG  0x3E 0
      // WRITE_ASCII 0x3A ~IBLUN13B~
      // WRITE_LONG  0x7A 0
      // WRITE_ASCII 0x76 ~IBLUN13B~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 246  // colour index
  SET location = wgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 91  // colour index
  SET location = wred    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 243  // colour index
  SET location = wblue    // location
  LAUNCH_PATCH_MACRO ~colour~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~blun14i.itm~) BEGIN
    COPY_EXISTING ~blun14i.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      WRITE_ASCII 0x22 ~F0~
      // WRITE_LONG  0x3E 0
      // WRITE_ASCII 0x3A ~IBLUN13B~
      // WRITE_LONG  0x7A 0
      // WRITE_ASCII 0x76 ~IBLUN13B~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 246  // colour index
  SET location = wgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 91  // colour index
  SET location = wred    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 246  // colour index
  SET location = wblue    // location
  LAUNCH_PATCH_MACRO ~colour~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~blun13.itm~) BEGIN
    COPY_EXISTING ~blun13.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      WRITE_ASCII 0x22 ~F0~ // animation type
    END
  END
  ACTION_IF (FILE_EXISTS_IN_GAME ~waflail.itm~) BEGIN
    COPY_EXISTING ~waflail.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      WRITE_ASCII 0x22 ~F0~ // animation type
    END
  END
  ACTION_IF (FILE_EXISTS_IN_GAME ~dwblun01.itm~) BEGIN
    COPY_EXISTING ~dwblun01.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      WRITE_ASCII 0x22 ~F0~ // animation type
    END
  END
END

// Double-headed Flail of Ages fix
ACTION_IF (FILE_EXISTS_IN_GAME ~wqlf1a1.bam~) BEGIN
  ACTION_IF (FILE_EXISTS_IN_GAME ~blun14e.itm~) BEGIN
    COPY_EXISTING ~blun14e.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      WRITE_ASCII 0x22 ~F1~
      // WRITE_LONG  0x3E 0
      // WRITE_ASCII 0x3A ~IBLUN13B~
      // WRITE_LONG  0x7A 0
      // WRITE_ASCII 0x76 ~IBLUN13B~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 252  // colour index
  SET location = wgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 91  // colour index
  SET location = wred    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 245  // colour index
  SET location = wblue    // location
  LAUNCH_PATCH_MACRO ~colour~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~blun14f.itm~) BEGIN
    COPY_EXISTING ~blun14f.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      WRITE_ASCII 0x22 ~F1~
      // WRITE_LONG  0x3E 0
      // WRITE_ASCII 0x3A ~IBLUN13B~
      // WRITE_LONG  0x7A 0
      // WRITE_ASCII 0x76 ~IBLUN13B~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 246  // colour index
  SET location = wgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 91  // colour index
  SET location = wred    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 243  // colour index
  SET location = wblue    // location
  LAUNCH_PATCH_MACRO ~colour~
    END
  BUT_ONLY_IF_IT_CHANGES
  END
END

// Triple-headed Flail of Ages fix
ACTION_IF (FILE_EXISTS_IN_GAME ~wqlf3a1.bam~) BEGIN
  ACTION_IF (FILE_EXISTS_IN_GAME ~blun14.itm~) BEGIN
    COPY_EXISTING ~blun14.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      WRITE_ASCII 0x22 ~F3~
      // WRITE_LONG  0x3E 0
      // WRITE_ASCII 0x3A ~IBLUN13B~
      // WRITE_LONG  0x7A 0
      // WRITE_ASCII 0x76 ~IBLUN13B~
  LAUNCH_PATCH_MACRO ~clear~
  SET setr = 229
  SET setg = 215
  SET setb = 83
  SET speed = 0x64
  SET location = wblue    // location
  LAUNCH_PATCH_MACRO ~pulse~
  SET gradient = 245  // colour index
  SET location = wgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 243  // colour index
  SET location = wpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 244  // colour index
  SET location = wred    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 252  // colour index
  SET location = wblue    // location
  LAUNCH_PATCH_MACRO ~colour~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~blun30.itm~) BEGIN
    COPY_EXISTING ~blun30.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      WRITE_ASCII 0x22 ~F3~
      // WRITE_LONG  0x3E 0
      // WRITE_ASCII 0x3A ~IBLUN13B~
      // WRITE_LONG  0x7A 0
      // WRITE_ASCII 0x76 ~IBLUN13B~
  LAUNCH_PATCH_MACRO ~clear~
  SET setr = 229
  SET setg = 215
  SET setb = 83
  SET speed = 0x64
  SET location = wblue    // location
  LAUNCH_PATCH_MACRO ~pulse~
  SET gradient = 218  // colour index
  SET location = wgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 216  // colour index
  SET location = wpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 244  // colour index
  SET location = wred    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 228  // colour index
  SET location = wblue    // location
  LAUNCH_PATCH_MACRO ~colour~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~blun30c.itm~) BEGIN
    COPY_EXISTING ~blun30c.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      WRITE_ASCII 0x22 ~F3~
      // WRITE_LONG  0x3E 0
      // WRITE_ASCII 0x3A ~IBLUN13B~
      // WRITE_LONG  0x7A 0
      // WRITE_ASCII 0x76 ~IBLUN13B~
  LAUNCH_PATCH_MACRO ~clear~
  SET setr = 229
  SET setg = 215
  SET setb = 83
  SET speed = 0x64
  SET location = wblue    // location
  LAUNCH_PATCH_MACRO ~pulse~
  SET gradient = 245  // colour index
  SET location = wgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 243  // colour index
  SET location = wpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 244  // colour index
  SET location = wred    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 228  // colour index
  SET location = wblue    // location
  LAUNCH_PATCH_MACRO ~colour~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~blun30d.itm~) BEGIN
    COPY_EXISTING ~blun30d.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      WRITE_ASCII 0x22 ~F3~
      // WRITE_LONG  0x3E 0
      // WRITE_ASCII 0x3A ~IBLUN13B~
      // WRITE_LONG  0x7A 0
      // WRITE_ASCII 0x76 ~IBLUN13B~
  LAUNCH_PATCH_MACRO ~clear~
  SET setr = 229
  SET setg = 215
  SET setb = 83
  SET speed = 0x64
  SET location = wblue    // location
  LAUNCH_PATCH_MACRO ~pulse~
  SET gradient = 245  // colour index
  SET location = wgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 243  // colour index
  SET location = wpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 244  // colour index
  SET location = wred    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 228  // colour index
  SET location = wblue    // location
  LAUNCH_PATCH_MACRO ~colour~
    END
  BUT_ONLY_IF_IT_CHANGES
  END
END

// Mace of Disruption fix
ACTION_IF (FILE_EXISTS_IN_GAME ~wqlm2a1.bam~) BEGIN
  ACTION_IF (FILE_EXISTS_IN_GAME ~blun12.itm~) BEGIN
    COPY_EXISTING ~blun12.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      WRITE_ASCII 0x22 ~M2~ // animation type
    END
  END
  ACTION_IF (FILE_EXISTS_IN_GAME ~blun25.itm~) BEGIN
    COPY_EXISTING ~blun25.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      WRITE_ASCII 0x22 ~M2~ // animation type
    END
  END
END

// Staff fixes
ACTION_IF (FILE_EXISTS_IN_GAME ~wplqsg1.bam~) BEGIN // QS
  ACTION_FOR_EACH resource IN
    ~staf01~
    ~staf03~
    ~staf04~
    ~staf16~
    ~wastaff~
    ~npstaf~
  BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
      COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
      PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
        WRITE_ASCII 0x22 ~QS~ // animation type
      END
    END
  END
END

ACTION_IF (FILE_EXISTS_IN_GAME ~wplq2g1.bam~) BEGIN // Q2
  ACTION_FOR_EACH resource IN
    ~staf02~
    ~staf05~
    ~staf08~
    ~staf12~
  BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
      COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
      PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
        WRITE_ASCII 0x22 ~Q2~ // animation type
      END
    END
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf02.itm~) BEGIN
COPY_EXISTING ~staf02.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q2~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf05.itm~) BEGIN
COPY_EXISTING ~staf05.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q2~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf08.itm~) BEGIN
COPY_EXISTING ~staf08.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q2~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf12.itm~) BEGIN
COPY_EXISTING ~staf12.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q2~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf24.itm~) BEGIN
COPY_EXISTING ~staf24.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q2~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISTAF24~
    WRITE_LONG  0x7A 0
    WRITE_ASCII 0x76 ~ISTAF24~
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 198	// colour index
    SET location = wpink		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 216	// colour index
    SET location = wteal		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 208	// colour index
    SET location = wgrey		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 254	// colour index
    SET location = wblue		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 254	// colour index
    SET location = wred		// location
    LAUNCH_PATCH_MACRO ~colour~
    END
  BUT_ONLY_IF_IT_CHANGES
  END
END

ACTION_IF (FILE_EXISTS_IN_GAME ~wplq3g1.bam~) BEGIN // Q3
  ACTION_FOR_EACH resource IN
    ~staf14~
    ~staf18~
    ~staf19~
    ~staf20~
    ~staf23~
  BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
      COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
      PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
        WRITE_ASCII 0x22 ~Q3~ // animation type
      END
    END
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf14.itm~) BEGIN
COPY_EXISTING ~staf14.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q3~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf18.itm~) BEGIN
COPY_EXISTING ~staf18.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q3~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf19.itm~) BEGIN
COPY_EXISTING ~staf19.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q3~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 209	// colour index
    SET location = wpink		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 208	// colour index
    SET location = wteal		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 202	// colour index
    SET location = wgrey		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 244	// colour index
    SET location = wblue		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 202	// colour index
    SET location = wred		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET setr = 0
    SET setg = 0
    SET setb = 0
    SET location = wteal		// location
    LAUNCH_PATCH_MACRO ~glow~
    SET setr = 0
    SET setg = 0
    SET setb = 0
    SET location = wgrey		// location
    LAUNCH_PATCH_MACRO ~glow~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf20.itm~) BEGIN
COPY_EXISTING ~staf20.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q3~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISTAF20~
    WRITE_LONG  0x7A 0
    WRITE_ASCII 0x76 ~ISTAF20~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf23.itm~) BEGIN
COPY_EXISTING ~staf23.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q3~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~misc5t.itm~) BEGIN
COPY_EXISTING ~misc5t.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q3~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    END
  BUT_ONLY_IF_IT_CHANGES
  END
END

ACTION_IF (FILE_EXISTS_IN_GAME ~wplq4g1.bam~) BEGIN // Q4
  ACTION_FOR_EACH resource IN
    ~staf09~
    ~staf10~
    ~staf13~
    ~staf15~
    ~staf17~
  BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
      COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
      PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
        WRITE_ASCII 0x22 ~Q4~ // animation type
      END
    END
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf09.itm~) BEGIN
COPY_EXISTING ~staf09.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q4~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf10.itm~) BEGIN
COPY_EXISTING ~staf10.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q4~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 195	// colour index
    SET location = wpink		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 100	// colour index
    SET location = wteal		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 202	// colour index
    SET location = wgrey		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 96	// colour index
    SET location = wblue		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 96	// colour index
    SET location = wred		// location
    LAUNCH_PATCH_MACRO ~colour~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf13.itm~) BEGIN
COPY_EXISTING ~staf13.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q4~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf15.itm~) BEGIN
COPY_EXISTING ~staf15.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q4~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf17.itm~) BEGIN
COPY_EXISTING ~staf17.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~Q4~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    END
  BUT_ONLY_IF_IT_CHANGES
  END
END

ACTION_IF (FILE_EXISTS_IN_GAME ~wplgsg1.bam~) BEGIN // GS
  ACTION_FOR_EACH resource IN
    ~staf11~
    ~staf21~
    ~staf22~
  BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
      COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
      PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
        WRITE_ASCII 0x22 ~GS~ // animation type
		WRITE_ASCII 0x44 ~1GSTAFGS~
      END
    END
  END
  
  ACTION_IF (FILE_EXISTS_IN_GAME ~staf11.itm~) BEGIN
COPY_EXISTING ~staf11.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~GS~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~1GSTAFGS~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 127	// colour index
    SET location = wpink		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 207	// colour index
    SET location = wteal		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 192	// colour index
    SET location = wgrey		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET setr = 0
    SET setg = 0
    SET setb = 0
    SET location = wblue		// location
    LAUNCH_PATCH_MACRO ~glow~
    SET gradient = 250	// colour index
    SET location = wblue		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 220	// colour index
    SET location = wred		// location
    LAUNCH_PATCH_MACRO ~colour~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf21.itm~) BEGIN
COPY_EXISTING ~staf21.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~GS~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~1GSTAFGS~
    // WRITE_LONG  0x3E 0
    // WRITE_ASCII 0x3A ~~
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 220	// colour index
    SET location = wpink		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 225	// colour index
    SET location = wteal		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 232	// colour index
    SET location = wgrey		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET setr = 0
    SET setg = 0
    SET setb = 0
    SET location = wblue		// location
    LAUNCH_PATCH_MACRO ~glow~
    SET gradient = 239	// colour index
    SET location = wblue		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 240	// colour index
    SET location = wred		// location
    LAUNCH_PATCH_MACRO ~colour~
    END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~staf22.itm~) BEGIN
COPY_EXISTING ~staf22.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~GS~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~1GSTAFGS~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISTAF22~
    WRITE_LONG  0x7A 0
    WRITE_ASCII 0x76 ~ISTAF22~
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 220	// colour index
    SET location = wpink		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 207	// colour index
    SET location = wteal		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 248	// colour index
    SET location = wgrey		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET setr = 0
    SET setg = 0
    SET setb = 0
    SET location = wblue		// location
    LAUNCH_PATCH_MACRO ~glow~
    SET setr = 30
    SET setg = 30
    SET setb = 20
    SET speed = 0x19
    SET location = wblue		// location
    LAUNCH_PATCH_MACRO ~pulse~
    SET gradient = 224	// colour index
    SET location = wblue		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 240	// colour index
    SET location = wred		// location
    LAUNCH_PATCH_MACRO ~colour~
    END
  BUT_ONLY_IF_IT_CHANGES
  END
END

// Helms fix (default style)

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlj0a1.bam~) BEGIN // J0 helms (equivalent to H0), open-faced and plain
END // J0 helms

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlj1a1.bam~) BEGIN // J1 helms (equivalent to H1), open-faced and wide horns

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm04.itm~) BEGIN
COPY_EXISTING ~helm04.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J1~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM21~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CHELM21~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 21    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 6    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 142  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 0  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  // PATCH_IF (%pcolour% = 2) BEGIN
  SET gradient = 0    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  // END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // J1 helms

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlj2a1.bam~) BEGIN // J2 helms (equivalent to H2), open-faced, spike, and wings

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm21.itm~) BEGIN
COPY_EXISTING ~helm21.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J2~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 227    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient =88  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 70  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  // PATCH_IF (%pcolour% = 2) BEGIN
  SET gradient = 195    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 195    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  // END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm31.itm~) BEGIN
COPY_EXISTING ~helm31.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J2~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CHELM03~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 66    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient =183  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 183  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  // PATCH_IF (%pcolour% = 2) BEGIN
  SET gradient = 0    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 0    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  // END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm32.itm~) BEGIN
COPY_EXISTING ~helm32.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J2~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CHELM03~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 207    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient =199  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 199  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  // PATCH_IF (%pcolour% = 2) BEGIN
  SET gradient = 0    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 0    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  // END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // J2 helms

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlj3a1.bam~) BEGIN // J3 helms (equivalent to H3), closed-faced and curling horns

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm02.itm~) BEGIN
COPY_EXISTING ~helm02.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J3~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM26~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CHELM04~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 14    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 21    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 21  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 90  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  // PATCH_IF (%pcolour% = 2) BEGIN
  SET gradient = 21    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  // END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm15.itm~) BEGIN
COPY_EXISTING ~helm15.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J3~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM23~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CHELM04~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 232    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 202  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 209  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 0    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 232    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm17.itm~) BEGIN
COPY_EXISTING ~helm17.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J3~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 98    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 3  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 253  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  // PATCH_IF (%pcolour% = 2) BEGIN
  SET gradient = 0    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 0    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  // END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm33.itm~) BEGIN
COPY_EXISTING ~helm33.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J3~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 223    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient =208  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 208  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 0    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 0    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~compon05.itm~) BEGIN
COPY_EXISTING ~compon05.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J3~ // J9 is for the IWD-style icon
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 225    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient =250  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 47  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  // PATCH_IF (%pcolour% = 2) BEGIN
  SET gradient = 210    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 250    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  // END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~wa2helm.itm~) BEGIN
COPY_EXISTING ~wa2helm.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J3~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM24~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CHELM04~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 223    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 27  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 27  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 0    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  // PATCH_IF (%pcolour% = 2) BEGIN
  SET gradient = 0    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  // END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // J3 helms

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlj4a1.bam~) BEGIN // J4 helms (equivalent to H4), open-faced, horns, and tail

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm11.itm~) BEGIN
COPY_EXISTING ~helm11.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J4~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM10~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CHELM17~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 226    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 102  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 102  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 98    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 102    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm16.itm~) BEGIN
COPY_EXISTING ~helm16.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J4~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM16~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CHELM16~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 209    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 205  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 226  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  // PATCH_IF (%pcolour% = 2) BEGIN
  SET gradient = 195    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 0    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  // END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // J4 helms

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlj5a1.bam~) BEGIN // J5 helms (equivalent to H5), open-faced and roman

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm13.itm~) BEGIN
COPY_EXISTING ~helm13.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J5~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM12~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CHELM05~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 248    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 102  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 102  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 195    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 0    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // J5 helms

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlj6a1.bam~) BEGIN // J6 helms (equivalent to H6), open-faced and long spikes

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm01.itm~) BEGIN
COPY_EXISTING ~helm01.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J6~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM08~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CHELM01~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 14    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 28    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 202  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 202  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 202    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // J6 helms

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlj7a1.bam~) BEGIN // J7 helms, open-faced and long horns

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm07.itm~) BEGIN
COPY_EXISTING ~helm07.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J7~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CHELM07~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 98    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 114    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 241  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 0  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  // PATCH_IF (%pcolour% = 2) BEGIN
  SET gradient = 241    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  // END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm14.itm~) BEGIN
COPY_EXISTING ~helm14.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J7~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM22~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CHELM07~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 209    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 182  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 0  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  // PATCH_IF (%pcolour% = 2) BEGIN
  SET gradient = 21    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 225    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  // END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // J7 helms

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlj8a1.bam~) BEGIN // J8 helms, open-faced and wings

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm03.itm~) BEGIN
COPY_EXISTING ~helm03.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J8~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM07~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CHELMX6~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 207    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 21    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 184  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 21  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  // PATCH_IF (%pcolour% = 2) BEGIN
  SET gradient = 223    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  // END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm08.itm~) BEGIN
COPY_EXISTING ~helm08.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J8~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM05~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CHELMX4~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 209    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 0    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 232  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 0  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 223    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // J8 helms

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlj9a1.bam~) BEGIN // J9 helms, closed-faced, pointy horns, and tail

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm09.itm~) BEGIN
COPY_EXISTING ~helm09.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~J9~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM17~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CHELM17~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 223    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 27    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 27  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 224  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 195    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // J9 helms

ACTION_IF (FILE_EXISTS_IN_GAME ~wqljaa1.bam~) BEGIN // JA helms, closed-faced, wide wings, and tail

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm05.itm~) BEGIN
COPY_EXISTING ~helm05.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~JA~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM19~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CHELM18~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 0    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 210    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 27  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 224  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  // PATCH_IF (%pcolour% = 2) BEGIN
  SET gradient = 159    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  // END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm06.itm~) BEGIN
COPY_EXISTING ~helm06.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~JA~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM18~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CHELM18~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 0    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 119    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 27  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 224  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  // PATCH_IF (%pcolour% = 2) BEGIN
  SET gradient = 118    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  // END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm10.itm~) BEGIN
COPY_EXISTING ~helm10.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~JA~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM20~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CHELM20~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 0    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 27  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 99  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 195    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 210    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // JA helms

ACTION_IF (FILE_EXISTS_IN_GAME ~wqljba1.bam~) BEGIN // JB helms, headband
END // JB helms

ACTION_IF (FILE_EXISTS_IN_GAME ~wqljca1.bam~) BEGIN // JC helms, open-faced and wide wings

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm12.itm~) BEGIN
COPY_EXISTING ~helm12.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~JC~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM02~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CHELMX2~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 195    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 21  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 242  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 0    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 109    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~helm22.itm~) BEGIN
COPY_EXISTING ~helm22.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~JC~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1HELM03~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CHELMX3~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 119    // colour index
  SET location = hgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 205  // colour index
  SET location = hblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 209  // colour index
  SET location = hred    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 102    // colour index
  SET location = hteal    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 0    // colour index
  SET location = hpink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // JC helms

// Shields fix (default style)

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld20.itm~) BEGIN
COPY_EXISTING ~shld20.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
LAUNCH_PATCH_MACRO ~clear~
SET gradient = 94    // colour index
SET location = sred    // location
LAUNCH_PATCH_MACRO ~colour~
SET gradient = 92    // colour index
SET location = sblue    // location
LAUNCH_PATCH_MACRO ~colour~
SET gradient = 95    // colour index
SET location = sgrey    // location
LAUNCH_PATCH_MACRO ~colour~
PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 94    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld25.itm~) BEGIN
COPY_EXISTING ~shld25.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLD25~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD17~
    LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 231    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 221    // colour index
  SET location = sred    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 203  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 7    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld27.itm~) BEGIN
COPY_EXISTING ~shld27.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
WRITE_LONG  0x3E 0
WRITE_ASCII 0x3A ~ISHLDGN~
WRITE_LONG  0x48 0
WRITE_ASCII 0x44 ~GSHLD03~
WRITE_LONG  0x5C 0
WRITE_ASCII 0x58 ~CSHLD04~
LAUNCH_PATCH_MACRO ~clear~
SET gradient = 218    // colour index
SET location = sred    // location
LAUNCH_PATCH_MACRO ~colour~
SET gradient = 217    // colour index
SET location = sblue    // location
LAUNCH_PATCH_MACRO ~colour~
SET gradient = 218    // colour index
SET location = sgrey    // location
LAUNCH_PATCH_MACRO ~colour~
PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 58    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlc0a1.bam~) BEGIN // C0 shields

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld01.itm~) BEGIN
COPY_EXISTING ~shld01.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C0~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDS01~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GSSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD25~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 200    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 21    // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 238    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld02.itm~) BEGIN
COPY_EXISTING ~shld02.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C0~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDS04~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GSSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD25~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 99    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 87    // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 2    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld11.itm~) BEGIN
COPY_EXISTING ~shld11.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C0~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDS02~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GSSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD25~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 227    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 232    // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 183    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld12.itm~) BEGIN
COPY_EXISTING ~shld12.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C0~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDS03~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GSSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD25~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 24    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 209    // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 87    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld24.itm~) BEGIN
COPY_EXISTING ~shld24.itm~ ~override~ // Remove tower shield animation and use its original small shield animation because there isn't really a suitable buckler icon for it
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C0~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLD24~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GSSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD24~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 43		// colour index
  SET location = sred		// location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 95		// colour index
  SET location = sblue		// location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 42		// colour index
  SET location = sgrey		// location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 43		// colour index
  SET location = spink		// location
  LAUNCH_PATCH_MACRO ~colour~
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld28.itm~) BEGIN
COPY_EXISTING ~shld28.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C0~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDS05~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GSSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD28~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 212    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 254    // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 244    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // C0 shields

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlc1a1.bam~) BEGIN // C1 shields

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld03.itm~) BEGIN
COPY_EXISTING ~shld03.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C1~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDM01~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GMSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLDM0~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 226    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 209    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 226  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 87    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld04.itm~) BEGIN
COPY_EXISTING ~shld04.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C1~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDM05~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GMSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLDM0~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 208    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 210    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 211  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 66    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld13.itm~) BEGIN
COPY_EXISTING ~shld13.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C1~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDM02~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GMSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLDM0~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 217    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 231    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 202  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 186    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld14.itm~) BEGIN
COPY_EXISTING ~shld14.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C1~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDM03~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GMSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLDM0~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 226    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 237    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 209  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 238    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // C1 shields

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlc2a1.bam~) BEGIN // C2 shields

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld05.itm~) BEGIN
COPY_EXISTING ~shld05.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C2~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDL01~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GLSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD30~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 239    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 233    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 234  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 41    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld06.itm~) BEGIN
COPY_EXISTING ~shld06.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C2~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDL04~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GLSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD30~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 226    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 72    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 93  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 237    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld15.itm~) BEGIN
COPY_EXISTING ~shld15.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C2~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDL02~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GLSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD30~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 202    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 235    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 235  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 204    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld16.itm~) BEGIN
COPY_EXISTING ~shld16.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C2~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDL03~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GLSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD30~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 239    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 208    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 234  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 238    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld19.itm~) BEGIN
COPY_EXISTING ~shld19.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C2~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDL06~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GLSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD30~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 208    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 209    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 225  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 183    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld23.itm~) BEGIN
COPY_EXISTING ~shld23.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C2~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLD23~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GLSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD23~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 217    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 96    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 184  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 190    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld30.itm~) BEGIN
COPY_EXISTING ~shld30.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C2~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDL05~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GLSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD30~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 109    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 216    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 211  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 2    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // C2 shields

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlc3a1.bam~) BEGIN // C3 shields

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld22.itm~) BEGIN
COPY_EXISTING ~shld22.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C3~
    LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 203    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 201    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 30  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 182    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld29.itm~) BEGIN
COPY_EXISTING ~shld29.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C3~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDM09~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GMSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD29~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 101    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 127    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 253    // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 254    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld32.itm~) BEGIN
COPY_EXISTING ~shld32.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C3~
    LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 209    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 93    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 209  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 127    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~npshld.itm~) BEGIN
COPY_EXISTING ~npshld.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C3~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GMSHLD~
    LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 218    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 192    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 217  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 60    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~wa2shiel.itm~) BEGIN
COPY_EXISTING ~wa2shiel.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C3~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GMSHLD~
    LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 226    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 113    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 113  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 11    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // C3 shields

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlc2a1.bam~) BEGIN // C4 shields

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld08.itm~) BEGIN
COPY_EXISTING ~shld08.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C4~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDB01~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GBSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CSHLDB1~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 226    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 239    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 226  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 188    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld09.itm~) BEGIN
COPY_EXISTING ~shld09.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C4~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDB02~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GBSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CSHLDB1~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 192    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 186    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 192  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 184    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld10.itm~) BEGIN
COPY_EXISTING ~shld10.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C4~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDB03~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GBSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CSHLDB1~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 226    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 160    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 226  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 206    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld17.itm~) BEGIN
COPY_EXISTING ~shld17.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C4~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDB04~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GBSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CSHLDB1~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 250    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 187    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 224  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 187    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld08.itm~) BEGIN
COPY_EXISTING ~shld08.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C4~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDB01~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GBSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CSHLDB1~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 226    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 239    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 226  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 188    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // C4 shields

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlc5a1.bam~) BEGIN // C5 shields

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld26.itm~) BEGIN
COPY_EXISTING ~shld26.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C5~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1SHLDM02~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GSSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CSHLDM2~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 217    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 183    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 183  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 63    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // C5 shields

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlc6a1.bam~) BEGIN // C6 shields

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld07.itm~) BEGIN
COPY_EXISTING ~shld07.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C6~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1SHLDL02~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GLSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CSHLDL2~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 249    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 66    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 249  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 51    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld31.itm~) BEGIN
COPY_EXISTING ~shld31.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C6~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~1SHLDL03~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GLSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~1CSHLDL3~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 192    // colour index
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 190    // colour index
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 192  // colour index
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  PATCH_IF (%pcolour% = 1 || %pcolour% = 2 || %pcolour% = 3) BEGIN
  SET gradient = 59    // colour index
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // C6 shields

ACTION_IF (FILE_EXISTS_IN_GAME ~wqlc7a1.bam~) BEGIN // C7 shields

  ACTION_IF (FILE_EXISTS_IN_GAME ~shld21.itm~) BEGIN
COPY_EXISTING ~shld21.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C7~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLD21~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GMSHLD~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD21~
  LAUNCH_PATCH_MACRO ~clear~
  SET gradient = 26    // colour index 216
  SET location = sgrey    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 101    // colour index 214
  SET location = steal    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 215  // colour index 215
  SET location = sblue    // location
  LAUNCH_PATCH_MACRO ~colour~
  SET gradient = 210    // colour index 210
  SET location = spink    // location
  LAUNCH_PATCH_MACRO ~colour~
  END
  BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~dwshld01.itm~) BEGIN
COPY_EXISTING ~dwshld01.itm~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~C7~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GMSHLD~
   	LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 184		// colour index
    SET location = sgrey		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 186		// colour index
    SET location = steal		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 192	// colour index
    SET location = sblue		// location
    LAUNCH_PATCH_MACRO ~colour~
    SET gradient = 199		// colour index
    SET location = spink		// location
    LAUNCH_PATCH_MACRO ~colour~
  END
  BUT_ONLY_IF_IT_CHANGES
  END

END // C7 shields

// Projectiles fixes

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1arow01.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~AROW01.ITM~) BEGIN
  COPY_EXISTING ~AROW01.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROWHVY") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow01%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1arow02.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~AROW02.ITM~) BEGIN
  COPY_EXISTING ~AROW02.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROWHVY") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow02%~
          END
      PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROW") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow02%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~quiver01.ITM~) BEGIN
  COPY_EXISTING ~quiver01.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROWHVY") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow02%~
          END
      PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROW") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow02%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1arow03.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~AROW03.ITM~) BEGIN
  COPY_EXISTING ~AROW03.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROW") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow03%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1arow04.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~AROW04.ITM~) BEGIN
  COPY_EXISTING ~AROW04.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROW") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow04%~
          END
      PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROWFLG") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow04%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1arow05.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~AROW05.ITM~) BEGIN
  COPY_EXISTING ~AROW05.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROW") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow05%~
          END
      PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROWHVY") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow05%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1arow07.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~AROW07.ITM~) BEGIN
  COPY_EXISTING ~AROW07.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROW") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow07%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1arow10.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~AROW10.ITM~) BEGIN
  COPY_EXISTING ~AROW10.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROW") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow10%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1arow11.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~AROW11.ITM~) BEGIN
  COPY_EXISTING ~AROW11.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROW") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow11%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1arow15.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~AROW15.ITM~) BEGIN
  COPY_EXISTING ~AROW15.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROW") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow15%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~quiver03.ITM~) BEGIN
  COPY_EXISTING ~quiver03.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "ARROW") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1arow15%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1axe05.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~AX1H05.ITM~) BEGIN
  COPY_EXISTING ~AX1H05.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "AXE") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1axe05%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~AX1H05B.ITM~) BEGIN // IR fix
  COPY_EXISTING ~AX1H05B.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "AXE") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1axe05%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~AX1H06.ITM~) BEGIN
  COPY_EXISTING ~AX1H06.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "AXE") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1axe05%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~AX1H06B.ITM~) BEGIN // IR fix
  COPY_EXISTING ~AX1H06B.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "AXE") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1axe05%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1axe08.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~AX1H08.ITM~) BEGIN
  COPY_EXISTING ~AX1H08.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "AXE") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1axe08%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~AX1H08B.ITM~) BEGIN // IR fix
  COPY_EXISTING ~AX1H08B.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "AXE") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1axe08%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1axe09.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~AX1H09.ITM~) BEGIN
  COPY_EXISTING ~AX1H09.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "AXE") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1axe09%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~AX1H09B.ITM~) BEGIN // IR fix
  COPY_EXISTING ~AX1H09B.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "AXE") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1axe09%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1axe10.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~AX1H10.ITM~) BEGIN
  COPY_EXISTING ~AX1H10.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "AXE") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1axe10%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~AX1H10B.ITM~) BEGIN // IR fix
  COPY_EXISTING ~AX1H10B.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "AXE") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1axe10%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1axe16.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~AX1H16.ITM~) BEGIN
  COPY_EXISTING ~AX1H16.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "AXE") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1axe16%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~AX1H16B.ITM~) BEGIN // IR fix
  COPY_EXISTING ~AX1H16B.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "AXE") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1axe16%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1bolt01.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~BOLT01.ITM~) BEGIN
  COPY_EXISTING ~BOLT01.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BOLT") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bolt01%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 27  // colour index
    SET location = wpink    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1bolt02.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~BOLT02.ITM~) BEGIN
  COPY_EXISTING ~BOLT02.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BOLT") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bolt02%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 90  // colour index
    SET location = wpink    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~quiver02.ITM~) BEGIN
  COPY_EXISTING ~quiver02.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BOLT") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bolt02%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 90  // colour index
    SET location = wpink    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1bolt03.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~BOLT03.ITM~) BEGIN
  COPY_EXISTING ~BOLT03.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BOLT") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bolt03%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 218  // colour index
    SET location = wpink    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1bolt04.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~BOLT04.ITM~) BEGIN
  COPY_EXISTING ~BOLT04.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BOLT") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bolt04%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 252  // colour index
    SET location = wpink    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1bolt05.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~BOLT05.ITM~) BEGIN
  COPY_EXISTING ~BOLT05.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BOLT") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bolt05%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 86  // colour index
    SET location = wpink    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1bolt06.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~BOLT06.ITM~) BEGIN
  COPY_EXISTING ~BOLT06.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BOLT") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bolt06%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 81  // colour index
    SET location = wpink    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~BOLT08.ITM~) BEGIN
  COPY_EXISTING ~BOLT08.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 208  // colour index
    SET location = wpink    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1bolt09.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~BOLT09.ITM~) BEGIN
  COPY_EXISTING ~BOLT09.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BOLT") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bolt09%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 227  // colour index
    SET location = wpink    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~quiver04.ITM~) BEGIN
  COPY_EXISTING ~quiver04.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BOLT") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bolt09%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 227  // colour index
    SET location = wpink    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~BULL01.ITM~) BEGIN
  COPY_EXISTING ~BULL01.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 27  // colour index
    SET location = wgrey    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1bull02.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~BULL02.ITM~) BEGIN
  COPY_EXISTING ~BULL02.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BULLET") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bull02%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 218  // colour index
    SET location = wgrey    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~quiver05.ITM~) BEGIN
  COPY_EXISTING ~quiver05.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BULLET") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bull02%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 218  // colour index
    SET location = wgrey    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1bull03.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~BULL03.ITM~) BEGIN
  COPY_EXISTING ~BULL03.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BULLET") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bull03%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 70  // colour index
    SET location = wgrey    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1bull04.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~BULL04.ITM~) BEGIN
  COPY_EXISTING ~BULL04.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BULLET") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bull04%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 115  // colour index
    SET location = wgrey    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1bull05.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~BULL05.ITM~) BEGIN
  COPY_EXISTING ~BULL05.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BULLET") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bull05%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 148  // colour index
    SET location = wgrey    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~quiver06.ITM~) BEGIN
  COPY_EXISTING ~quiver06.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BULLET") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bull05%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 148  // colour index
    SET location = wgrey    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1bull06.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~BULL06.ITM~) BEGIN
  COPY_EXISTING ~BULL06.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "BULLET") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1bull06%~
          END
        END
      END
    LAUNCH_PATCH_MACRO ~clear~
    SET gradient = 19  // colour index
    SET location = wgrey    // location
    LAUNCH_PATCH_MACRO ~colour~
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1dagg05.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~DAGG05.ITM~) BEGIN
  COPY_EXISTING ~DAGG05.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DAGGER") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dagg05%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~DAGG05B.ITM~) BEGIN // IR fix
  COPY_EXISTING ~DAGG05B.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DAGGER") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dagg05%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1dagg11.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~DAGG11.ITM~) BEGIN
  COPY_EXISTING ~DAGG11.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DAGGER") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dagg11%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~DAGG11B.ITM~) BEGIN // IR fix
  COPY_EXISTING ~DAGG11.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DAGGER") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dagg11%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1dagg12.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~DAGG12.ITM~) BEGIN
  COPY_EXISTING ~DAGG12.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DAGGER") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dagg12%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~DAGG12B.ITM~) BEGIN // IR fix
  COPY_EXISTING ~DAGG12B.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DAGGER") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dagg12%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1dagg16.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~DAGG16.ITM~) BEGIN
  COPY_EXISTING ~DAGG16.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DAGGER") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dagg16%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~DAGG16B.ITM~) BEGIN // IR fix
  COPY_EXISTING ~DAGG16B.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DAGGER") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dagg16%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1dart01.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~DART01.ITM~) BEGIN
  COPY_EXISTING ~DART01.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DART") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dart01%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1dart02.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~DART02.ITM~) BEGIN
  COPY_EXISTING ~DART02.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DART") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dart02%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1dart03.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~DART03.ITM~) BEGIN
  COPY_EXISTING ~DART03.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DART") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dart03%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1dart04.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~DART04.ITM~) BEGIN
  COPY_EXISTING ~DART04.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DART") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dart04%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1dart05.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~DART05.ITM~) BEGIN
  COPY_EXISTING ~DART05.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DART") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dart05%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ADD_PROJECTILE      ~item_rev/components/1pp/projectiles/1dart08.pro~

  ACTION_IF (FILE_EXISTS_IN_GAME ~DART08.ITM~) BEGIN
  COPY_EXISTING ~DART08.ITM~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DART") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dart08%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~ohdart50.itm~) BEGIN
  COPY_EXISTING ~ohdart50.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DART") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dart02%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

  ACTION_IF (FILE_EXISTS_IN_GAME ~ohdart51.itm~) BEGIN
  COPY_EXISTING ~ohdart51.itm~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
      READ_LONG  0x64 "abil_off" ELSE 0
      READ_SHORT 0x68 "abil_num" ELSE 0
      PATCH_IF (abil_off > 0x71) BEGIN
        FOR (index = 0; index < abil_num; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) "proj"
          LOOKUP_IDS_SYMBOL_OF_INT projectile projectl %proj% - 1
          PATCH_IF ("%projectile%" STRING_EQUAL_CASE "DART") BEGIN
            WRITE_SHORT ("%abil_off%" + 0x2a + (0x38 * "%index%")) ~%1dart02%~
          END
        END
      END
      END
    BUT_ONLY_IF_IT_CHANGES
  END

// EE projectile fixes

ACTION_FOR_EACH resource IN
  ~brac18~   // Gloves of Missile Snaring
  ~shld24~   // Reflection Shield
BEGIN
  ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%.itm~) BEGIN
    COPY_EXISTING ~%resource%.itm~ ~override\%resource%.itm~
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = 55 // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow01% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow02% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow03% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow04% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow05% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow07% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow10% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow11% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow15% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1axe05% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1axe08% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1axe09% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1axe10% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1axe16% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bolt01% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bolt02% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bolt03% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bolt04% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bolt05% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bolt06% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bolt09% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bull02% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bull03% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bull04% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bull05% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bull06% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dagg05% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dagg11% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dagg12% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dagg16% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dart01% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dart02% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dart03% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dart04% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dart05% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 2			// timing type
SET power = 0			// power
SET resist_dispel = 0	// dispel/resitance
SET duration = 0		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dart08% - 1) // param2
LAUNCH_PATCH_MACRO ADD_ITEM_EQEFFECT
    END	BUT_ONLY_IF_IT_CHANGES
  END
END

ACTION_IF (FILE_EXISTS_IN_GAME ~dvsrv3.mrk~) BEGIN // SR check
ACTION_IF (FILE_EXISTS_IN_GAME ~npshld.spl~) BEGIN // Delryn Family Shield
COPY_EXISTING ~npshld.spl~ ~override~
PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = 55 // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow01% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow02% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow03% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow04% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow05% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow07% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow10% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow11% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1arow15% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1axe05% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1axe08% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1axe09% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1axe10% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1axe16% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bolt01% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bolt02% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bolt03% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bolt04% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bolt05% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bolt06% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bolt09% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bull02% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bull03% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bull04% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bull05% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1bull06% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dagg05% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dagg11% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dagg12% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dagg16% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dart01% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dart02% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dart03% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dart04% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dart05% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

SET opcode = 83			// Set opcode
SET target = 1			// target type
SET timing = 0			// timing type
SET power = 3			// power
SET resist_dispel = 3	// dispel/resitance
SET duration = 60		// duration
SET probability1 = 100	// probability 1
SET probability2 = 0	// probability 2
SPRINT "resource" "" 		// resource
SET dicenumber = 0		// dice number
SET dicesize = 0		// dice size
SET savingthrow = 0   // saving throw
SET savebonus = 0		// saving throw bonus
SET parameter1 = 0 // param1
SET parameter2 = (%1dart08% - 1) // param2
SET header = 1
LAUNCH_PATCH_MACRO ADD_SPELL_EFFECT

END
BUT_ONLY_IF_IT_CHANGES
END
END


// BG1 shields
ACTION_IF (1pp_ee_bg1_style_shields = 1) BEGIN
  ACTION_FOR_EACH resource IN
    ~shld01~
    ~shld02~
    ~shld03~
    ~shld04~
    ~shld05~
    ~shld06~
    ~shld07~
    ~shld08~
    ~shld09~
    ~shld10~
    ~shld11~
    ~shld12~
    ~shld13~
    ~shld14~
    ~shld15~
    ~shld16~
    ~shld17~
    ~shld19~
    ~shld23~
    ~shld24~
    ~shld25~
    ~shld26~
    ~shld27~
    ~shld28~
    ~shld29~
    ~shld30~
    ~shld31~
  BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%resource%a.itm~) BEGIN
      COPY_EXISTING ~%resource%a.itm~ ~override\%resource%.itm~
    END
  END
END